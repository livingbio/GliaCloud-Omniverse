[package]
title = "ComfyUI Graph Editor"
description = "A built-in ComfyUI graph editor and Graph Model for the Omniverse platform"
version = "0.1.0"
authors = ["GliaCloud"]
repository = ""
keywords = ["graph", "ai", "editor"]
changelog = "docs/CHANGELOG.md"
preview_image = "data/preview.png"
readme = "docs/README.md"
category = "Kit"
icon = "icons/icon.svg"

[dependencies]
"omni.ui" = {}
"omni.kit.graph.editor.core" = {}
"omni.kit.window.quicksearch" = {optional=true}
"omni.kit.window.filepicker" = {optional=true}
"omni.kit.window.popup_dialog" = {optional=true}
"omni.kit.graph.delegate.default" = {}
"omni.kit.graph.delegate.modern" = {}
"omni.kit.graph.delegate.neo" = {}
"omni.kit.menu.edit" = {}
"omni.kit.actions.core" = {}
"omni.services.core" = {}
"omni.services.transport.server.http" = {}
"omni.usd" = {}
"omni.kit.viewport.utility" = {}

[[python.module]]
name = "omni.comfyui.graph.editor"

[settings.exts."omni.comfyui.graph.editor"]
# Path where the viewport capture endpoints will be mounted and available to handle incoming requests.

# Defining this as a setting makes it easy to change or rebrand our service using only command-line or KIT-file
# configuration instructions, should extensions ever feature conflicting endpoint naming conventions.
service_path = "/viewport-capture"

# Service resource subpath.
#
# This path will always be a child of the `service_path` setting, and expressed as a formatted join, like so:
# f`{service_path}{service_resource_subpath}`
#
# This joined path will help set two values for our service:
#   1. The location on the server where captured images will be stored and retrieved by the webserver once mounted. Currently, this location is a subdirectory 
#   (determined by these settings) within USD Composer's predetermined ${temp} folder. 
#
#   2. The url that the images will be publically available. Currently, this url is an endpoint
#   (determined by these settings) served through 'localhost:8111'.
service_resource_subpath = "/static"

[[test]]
dependencies = [
    "omni.kit.mainwindow",
    "omni.kit.renderer.capture",
    "omni.kit.renderer.core",
    "omni.kit.graph.editor.example",
    "omni.kit.graph.editor.core",
]

args = [
    "--/app/window/dpiScaleOverride=1.0",
    "--/app/window/scaleToMonitor=false",
    "--no-window"
]

stdoutFailPatterns.exclude = [
    "*Failed to load texture*",
]